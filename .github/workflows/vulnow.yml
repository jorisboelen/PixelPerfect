name: VULNOW Test

on:
    push:
        branches: [ 'test/vulnow' ]
    workflow_dispatch:

jobs:
    backend:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4
              with:
                  sparse-checkout: |
                      backend
            - name: "VULNOW :: Setup Variables"
              id: vars
              run: |
                        ORG=$(echo "${{ github.repository }}" | cut -d'/' -f1)
                        REPO=$(echo "${{ github.repository }}" | cut -d'/' -f2)
                        COMMITID=$(git rev-parse HEAD)

                        # Export these values to the environment
                        echo "ORG=$ORG" >> $GITHUB_ENV
                        echo "REPO=$REPO" >> $GITHUB_ENV
                        echo "COMMITID=$COMMITID" >> $GITHUB_ENV
                        echo "VULNOW_ENDPOINT=https://customer1-1d131cf0.vulnow.io/api/dataingestion" >> $GITHUB_ENV
                        echo "VULNOW_IMG=drakkars/vulnow:0.3" >> $GITHUB_ENV
            -   name: "VULNOW :: Get SBOM"
                run: |
                    cp backend/pyproject.toml .
                    docker run -e VULNOW_API_KEY=${{ secrets.VULNOW_API_KEY }} \
                      -e ORG=$ORG \
                      -e REPO=$REPO \
                      -e GITHUB_EVENT_NAME \
                      -e GITHUB_HEAD_REF \
                      -e GITHUB_BASE_REF \
                      -e GITHUB_REF_NAME \
                      -e GITHUB_REF \
                      -v ${{ github.workspace }}:/repo --workdir /repo \
                      $VULNOW_IMG \
                      python /app/cicd_cli.py get-sbom .
                env:
                    VULNOW_API_KEY: ${{ secrets.VULNOW_API_KEY }}

            -   name: "VULNOW :: Send SBOM"
                run: |
                    cat dynamic_traits.yml
                    docker run -e VULNOW_API_KEY=${{ secrets.VULNOW_API_KEY }} \
                      -e ORG=$ORG \
                      -e REPO=$REPO \
                      -e GITHUB_EVENT_NAME \
                      -e GITHUB_HEAD_REF \
                      -e GITHUB_BASE_REF \
                      -e GITHUB_REF_NAME \
                      -e GITHUB_REF \
                      -v ${{ github.workspace }}:/repo --workdir /repo \
                      $VULNOW_IMG \
                      python /app/cicd_cli.py send-bom --api_url $VULNOW_ENDPOINT -f bom.json --bom_type sbom
                env:
                    VULNOW_API_KEY: ${{ secrets.VULNOW_API_KEY }}

            -   name: "VULNOW :: Ingest"
                run: |
                    docker run -e VULNOW_API_KEY=${{ secrets.VULNOW_API_KEY }} \
                      -e ORG=$ORG \
                      -e REPO=$REPO \
                      -e OBOM_ARTIFACT_SHA=$OBOM_ARTIFACT_SHA \
                      -e GITHUB_EVENT_NAME \
                      -e GITHUB_HEAD_REF \
                      -e GITHUB_BASE_REF \
                      -e GITHUB_REF_NAME \
                      -e GITHUB_REF \
                      -v ${{ github.workspace }}:/repo --workdir /repo \
                      $VULNOW_IMG \
                      python /app/cicd_cli.py ingest --api_url $VULNOW_ENDPOINT
                env:
                    VULNOW_API_KEY: ${{ secrets.VULNOW_API_KEY }}
            -   uses: actions/upload-artifact@v4
                with:
                    name: bom
                    path: bom.json
                    if-no-files-found: error
                    overwrite: true
            -   uses: actions/upload-artifact@v4
                with:
                    name: sbom_with_vuln
                    path: sbom_with_vuln.json
                    if-no-files-found: error
                    overwrite: true
#
#    frontend:
#        runs-on: ubuntu-latest
#        needs: backend
#
#        steps:
#            -   uses: actions/checkout@v4
#                with:
#                    sparse-checkout: |
#                        frontend
#            -   name: "VULNOW :: Setup Variables"
#                id: vars
#                run: |
#                    ORG=$(echo "${{ github.repository }}" | cut -d'/' -f1)
#                    REPO=$(echo "${{ github.repository }}" | cut -d'/' -f2)
#                    COMMITID=$(git rev-parse HEAD)
#
#                    # Export these values to the environment
#                    echo "ORG=$ORG" >> $GITHUB_ENV
#                    echo "REPO=$REPO" >> $GITHUB_ENV
#                    echo "COMMITID=$COMMITID" >> $GITHUB_ENV
#                    echo "VULNOW_ENDPOINT=https://customer1-1d131cf0.vulnow.io/api/dataingestion" >> $GITHUB_ENV
#                    echo "VULNOW_IMG=drakkars/vulnow:0.2" >> $GITHUB_ENV
#            -   name: "VULNOW :: Get SBOM"
#                run: |
#                    docker run -e VULNOW_API_KEY=${{ secrets.VULNOW_API_KEY }} \
#                      -e ORG=$ORG \
#                      -e REPO=$REPO \
#                      -e GITHUB_EVENT_NAME \
#                      -e GITHUB_HEAD_REF \
#                      -e GITHUB_BASE_REF \
#                      -e GITHUB_REF_NAME \
#                      -e GITHUB_REF \
#                      -v ${{ github.workspace }}:/repo --workdir /repo \
#                      $VULNOW_IMG \
#                      python /app/cicd_cli.py get-sbom .
#                env:
#                    VULNOW_API_KEY: ${{ secrets.VULNOW_API_KEY }}
#
#            -   name: "VULNOW :: Send SBOM"
#                run: |
#                    cat dynamic_traits.yml
#                    docker run -e VULNOW_API_KEY=${{ secrets.VULNOW_API_KEY }} \
#                      -e ORG=$ORG \
#                      -e REPO=$REPO \
#                      -e GITHUB_EVENT_NAME \
#                      -e GITHUB_HEAD_REF \
#                      -e GITHUB_BASE_REF \
#                      -e GITHUB_REF_NAME \
#                      -e GITHUB_REF \
#                      -v ${{ github.workspace }}:/repo --workdir /repo \
#                      $VULNOW_IMG \
#                      python /app/cicd_cli.py send-bom --api_url $VULNOW_ENDPOINT -f bom.json --bom_type sbom
#                env:
#                    VULNOW_API_KEY: ${{ secrets.VULNOW_API_KEY }}
#
#            -   name: "VULNOW :: Ingest"
#                run: |
#                    docker run -e VULNOW_API_KEY=${{ secrets.VULNOW_API_KEY }} \
#                      -e ORG=$ORG \
#                      -e REPO=$REPO \
#                      -e OBOM_ARTIFACT_SHA=$OBOM_ARTIFACT_SHA \
#                      -e GITHUB_EVENT_NAME \
#                      -e GITHUB_HEAD_REF \
#                      -e GITHUB_BASE_REF \
#                      -e GITHUB_REF_NAME \
#                      -e GITHUB_REF \
#                      -v ${{ github.workspace }}:/repo --workdir /repo \
#                      $VULNOW_IMG \
#                      python /app/cicd_cli.py ingest --api_url $VULNOW_ENDPOINT
#                env:
#                    VULNOW_API_KEY: ${{ secrets.VULNOW_API_KEY }}
#            -   uses: actions/upload-artifact@v4
#                with:
#                    name: bom
#                    path: bom.json
#                    if-no-files-found: error
#                    overwrite: true
#            -   uses: actions/upload-artifact@v4
#                with:
#                    name: sbom_with_vuln
#                    path: sbom_with_vuln.json
#                    if-no-files-found: error
#                    overwrite: true
