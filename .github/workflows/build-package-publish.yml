name: Build, Package & Publish

on:
    push:
        branches: [ $default-branch ]
        tags: [ 'v*' ]
    pull_request:
    workflow_dispatch:

jobs:
    frontend:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./frontend
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 18.x
            - run: npm install -g @angular/cli
            - run: npm install
            - run: ng build
            - uses: actions/upload-artifact@v4
              with:
                  name: frontend
                  path: frontend/dist/pixelperfect/browser/
                  if-no-files-found: error
                  overwrite: true
    backend:
        runs-on: ubuntu-latest
        needs: frontend
        defaults:
            run:
                working-directory: ./backend
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v5
              with:
                  python-version: 3.11
            - uses: actions/download-artifact@v4
              with:
                  name: frontend
                  path: backend/pixelperfect/static/
            - run: |
                  pip install --upgrade build pip
                  python -m build
            - uses: actions/upload-artifact@v4
              with:
                  name: backend
                  path: backend/dist/pixelperfect-*.tar.gz
                  if-no-files-found: error
                  overwrite: true
    docker:
        runs-on: ubuntu-latest
        needs: backend
        steps:
            - uses: actions/checkout@v4
            - uses: actions/download-artifact@v4
              with:
                  name: backend
            - uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_PASSWORD }}
            - run: |
                  docker build --pull -t "${{ vars.DOCKERHUB_NAMESPACE }}/${{ vars.DOCKERHUB_REPOSITORY }}:${{ github.sha }}" .
                  docker push "${{ vars.DOCKERHUB_NAMESPACE }}/${{ vars.DOCKERHUB_REPOSITORY }}:${{ github.sha }}"
              if: github.ref_type == 'branch'
            - run: |
                  docker build --pull -t "${{ vars.DOCKERHUB_NAMESPACE }}/${{ vars.DOCKERHUB_REPOSITORY }}:${{ github.ref_name }}" .
                  docker push "${{ vars.DOCKERHUB_NAMESPACE }}/${{ vars.DOCKERHUB_REPOSITORY }}:${{ github.ref_name }}"
              if: github.ref_type == 'tag'
            - run: |
                  docker build --pull -t "${{ vars.DOCKERHUB_NAMESPACE }}/${{ vars.DOCKERHUB_REPOSITORY }}:latest" .
                  docker push "${{ vars.DOCKERHUB_NAMESPACE }}/${{ vars.DOCKERHUB_REPOSITORY }}:latest"
              if: github.ref_type == 'tag'
